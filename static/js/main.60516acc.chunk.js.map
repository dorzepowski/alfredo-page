{
  "version": 3,
  "sources": [
    "NavBar.tsx",
    "buckets/BucketsRepository.ts",
    "buckets/BucketsList.tsx",
    "buckets/Buckets.tsx",
    "App.tsx",
    "reportWebVitals.ts",
    "theme/index.ts",
    "index.tsx"
  ],
  "names": [
    "NavItems",
    "db",
    "id",
    "icon",
    "name",
    "amount",
    "value",
    "currency",
    "BucketsRepositoryInstance",
    "Object",
    "values",
    "Bucket",
    "bucket",
    "BucketsList",
    "buckets",
    "map",
    "Buckets",
    "useState",
    "setBuckets",
    "useEffect",
    "result",
    "BucketsRepository",
    "findAll",
    "useStyles",
    "makeStyles",
    "theme",
    "offset",
    "mixins",
    "toolbar",
    "navBar",
    "position",
    "bottom",
    "top",
    "left",
    "right",
    "NavBar",
    "defaultTab",
    "setValue",
    "classes",
    "BottomNavigation",
    "onChange",
    "event",
    "newValue",
    "showLabels",
    "className",
    "BottomNavigationAction",
    "label",
    "profile",
    "App",
    "Box",
    "display",
    "alignItems",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "then",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "createMuiTheme",
    "palette",
    "ReactDOM",
    "render",
    "StrictMode",
    "ThemeProvider",
    "CssBaseline",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.60516acc.chunk.js",
  "sourcesContent": [
    "import React, { useState } from 'react';\nimport { BottomNavigation, BottomNavigationAction, makeStyles } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport TerrainIcon from '@material-ui/icons/Terrain';\n\ninterface NavBarProps {\n  defaultTab: NavItems;\n}\n\nexport enum NavItems {\n  buckets,\n  profile,\n}\n\nconst useStyles = makeStyles(theme => ({\n  offset: theme.mixins.toolbar,\n  navBar: {\n    position: 'fixed',\n    bottom: 0,\n    top: 'auto',\n    left: 0,\n    right: 0,\n  },\n}));\n\nexport const NavBar: React.FC<NavBarProps> = ({ defaultTab }) => {\n  const [value, setValue] = useState(defaultTab);\n  const classes = useStyles();\n\n  return (\n    <>\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className={classes.navBar}\n      >\n        <BottomNavigationAction label=\"Kupki\" value={NavItems.buckets} icon={<TerrainIcon />} />\n        <BottomNavigationAction label=\"Profil\" value={NavItems.profile} icon={<PersonIcon />} />\n      </BottomNavigation>\n      <div className={classes.offset} />\n    </>\n  );\n};\n",
    "const db = {\n  '1111-1111-1111-1111': {\n    id: '2222-2222-2222-2222',\n    icon: '',\n    name: 'Rachunkowe',\n    amount: {\n      value: 1234.21,\n      currency: 'PLN',\n    },\n  },\n  '2222-2222-2222-2222': {\n    id: '2222-2222-2222-2222',\n    icon: '',\n    name: 'Oszczędności',\n    amount: {\n      value: 20334.21,\n      currency: 'PLN',\n    },\n  },\n  '3333-3333-3333-3333': {\n    id: '3333-3333-3333-3333',\n    icon: '',\n    name: 'Damian',\n    amount: {\n      value: 500,\n      currency: 'PLN',\n    },\n  },\n  '4444-4444-4444-4444': {\n    id: '4444-4444-4444-4444',\n    icon: '',\n    name: 'Madzia',\n    amount: {\n      value: 1000,\n      currency: 'PLN',\n    },\n  },\n  '5555-5555-5555-5555': {\n    id: '5555-5555-5555-5555',\n    icon: '',\n    name: 'Franek',\n    amount: {\n      value: 1500,\n      currency: 'PLN',\n    },\n  },\n  '6666-6666-6666-6666': {\n    id: '6666-6666-6666-6666',\n    icon: '',\n    name: 'Filip',\n    amount: {\n      value: 0,\n      currency: 'PLN',\n    },\n  },\n  '7777-7777-7777-7777': {\n    id: '7777-7777-7777-7777',\n    icon: '',\n    name: 'Aniela',\n    amount: {\n      value: 0,\n      currency: 'PLN',\n    },\n  },\n};\n\nexport interface BucketResponse {\n  id: string;\n  icon: string;\n  name: string;\n  amount: Money;\n}\n\nexport interface Money {\n  value: number;\n  currency: string;\n}\n\nclass BucketsRepository {\n  findAll(): BucketResponse[] {\n    return Object.values(db);\n  }\n}\n\nconst BucketsRepositoryInstance = new BucketsRepository();\n\nexport { BucketsRepositoryInstance as BucketsRepository };\n",
    "import React, { FC } from 'react';\nimport { BucketResponse } from './BucketsRepository';\n\ninterface BucketsListProps {\n  buckets: BucketResponse[];\n}\n\ninterface BucketProps {\n  bucket: BucketResponse;\n}\n\nconst Bucket: FC<BucketProps> = ({ bucket }) => {\n  return (\n    <div>\n      {bucket.name} {bucket.amount.value}\n    </div>\n  );\n};\n\nexport const BucketsList: React.FC<BucketsListProps> = ({ buckets }) => {\n  return (\n    <>\n      {buckets.map(bucket => (\n        <Bucket key={bucket.id} bucket={bucket} />\n      ))}\n    </>\n  );\n};\n",
    "import React, { FC, useEffect, useState } from 'react';\nimport { BucketResponse, BucketsRepository } from './BucketsRepository';\nimport { BucketsList } from './BucketsList';\n\nexport const Buckets: FC = () => {\n  const [buckets, setBuckets] = useState([] as BucketResponse[]);\n\n  useEffect(() => {\n    const result = BucketsRepository.findAll();\n    setBuckets(result);\n  }, []);\n\n  return <BucketsList buckets={buckets} />;\n};\n",
    "import React from 'react';\nimport './App.css';\nimport { Box } from '@material-ui/core';\nimport { Buckets } from './buckets/Buckets';\nimport { NavBar, NavItems } from './NavBar';\n\nconst App: React.FC = () => {\n  return (\n    <Box display=\"flex\" alignItems=\"flex-start\">\n      <Buckets />\n      <NavBar defaultTab={NavItems.buckets} />\n    </Box>\n  );\n};\n\nexport default App;\n",
    "import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "// import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    // primary: {\n    //   main: '#556cd6',\n    // },\n    // secondary: {\n    //   main: '#19857b',\n    // },\n    // error: {\n    //   main: red.A400,\n    // },\n    // background: {\n    //   default: '#fff',\n    // },\n  },\n});\n\nexport default theme;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}