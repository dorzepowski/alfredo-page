{
  "version": 3,
  "sources": [
    "NavBar.tsx",
    "buckets/BucketsRepository.ts",
    "components/Money.tsx",
    "buckets/BucketsList.tsx",
    "buckets/Buckets.tsx",
    "TopBar.tsx",
    "App.tsx",
    "reportWebVitals.ts",
    "theme/index.ts",
    "index.tsx"
  ],
  "names": [
    "NavItems",
    "useStyles",
    "makeStyles",
    "theme",
    "offset",
    "mixins",
    "toolbar",
    "navBar",
    "position",
    "bottom",
    "top",
    "left",
    "right",
    "NavBar",
    "defaultTab",
    "useState",
    "value",
    "setValue",
    "classes",
    "BottomNavigation",
    "onChange",
    "event",
    "newValue",
    "showLabels",
    "className",
    "BottomNavigationAction",
    "label",
    "buckets",
    "icon",
    "profile",
    "db",
    "id",
    "name",
    "amount",
    "currency",
    "BucketsRepositoryInstance",
    "Object",
    "values",
    "Money",
    "Fragment",
    "toLocaleString",
    "style",
    "useGrouping",
    "root",
    "width",
    "marginLeft",
    "marginTop",
    "card",
    "alignItems",
    "justifyContent",
    "marginRight",
    "fontSize",
    "typography",
    "pxToRem",
    "flexBasis",
    "flexGrow",
    "flexShrink",
    "color",
    "palette",
    "text",
    "secondary",
    "Bucket",
    "bucket",
    "expanded",
    "onExpand",
    "onHideDetails",
    "Accordion",
    "_",
    "expand",
    "AccordionSummary",
    "expandIcon",
    "content",
    "Avatar",
    "alt",
    "title",
    "Typography",
    "Divider",
    "AccordionActions",
    "Button",
    "size",
    "BucketsList",
    "setExpanded",
    "map",
    "Buckets",
    "setBuckets",
    "useEffect",
    "result",
    "BucketsRepository",
    "findAll",
    "grow",
    "menuButton",
    "spacing",
    "display",
    "breakpoints",
    "up",
    "search",
    "borderRadius",
    "shape",
    "backgroundColor",
    "fade",
    "common",
    "white",
    "searchIcon",
    "padding",
    "height",
    "pointerEvents",
    "inputRoot",
    "inputInput",
    "paddingLeft",
    "transition",
    "transitions",
    "create",
    "sectionDesktop",
    "sectionMobile",
    "TopBar",
    "AppBar",
    "Toolbar",
    "InputBase",
    "placeholder",
    "input",
    "inputProps",
    "IconButton",
    "aria-label",
    "Badge",
    "badgeContent",
    "edge",
    "aria-haspopup",
    "App",
    "Box",
    "flexDirection",
    "reportWebVitals",
    "onPerfEntry",
    "Function",
    "then",
    "getCLS",
    "getFID",
    "getFCP",
    "getLCP",
    "getTTFB",
    "createMuiTheme",
    "ReactDOM",
    "render",
    "StrictMode",
    "ThemeProvider",
    "CssBaseline",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.9a868c4e.chunk.js",
  "sourcesContent": [
    "import React, { useState } from 'react';\nimport { BottomNavigation, BottomNavigationAction, makeStyles } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport TerrainIcon from '@material-ui/icons/Terrain';\n\ninterface NavBarProps {\n  defaultTab: NavItems;\n}\n\nexport enum NavItems {\n  buckets,\n  profile,\n}\n\nconst useStyles = makeStyles(theme => ({\n  offset: theme.mixins.toolbar,\n  navBar: {\n    position: 'fixed',\n    bottom: 0,\n    top: 'auto',\n    left: 0,\n    right: 0,\n  },\n}));\n\nexport const NavBar: React.FC<NavBarProps> = ({ defaultTab }) => {\n  const [value, setValue] = useState(defaultTab);\n  const classes = useStyles();\n\n  return (\n    <>\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className={classes.navBar}\n      >\n        <BottomNavigationAction label=\"Kupki\" value={NavItems.buckets} icon={<TerrainIcon />} />\n        <BottomNavigationAction label=\"Profil\" value={NavItems.profile} icon={<PersonIcon />} />\n      </BottomNavigation>\n      <div className={classes.offset} />\n    </>\n  );\n};\n",
    "const db = {\n  '1111-1111-1111-1111': {\n    id: '1111-1111-1111-1111',\n    icon: 'R',\n    name: 'Rachunkowe',\n    amount: {\n      value: 1234.21,\n      currency: 'PLN',\n    },\n  },\n  '2222-2222-2222-2222': {\n    id: '2222-2222-2222-2222',\n    icon: 'O',\n    name: 'Oszczędności',\n    amount: {\n      value: 20334.21,\n      currency: 'PLN',\n    },\n  },\n  '3333-3333-3333-3333': {\n    id: '3333-3333-3333-3333',\n    icon: 'D',\n    name: 'Damian',\n    amount: {\n      value: 500,\n      currency: 'PLN',\n    },\n  },\n  '4444-4444-4444-4444': {\n    id: '4444-4444-4444-4444',\n    icon: 'M',\n    name: 'Madzia',\n    amount: {\n      value: 1000.23,\n      currency: 'PLN',\n    },\n  },\n  '5555-5555-5555-5555': {\n    id: '5555-5555-5555-5555',\n    icon: 'Fr',\n    name: 'Franek',\n    amount: {\n      value: 1500,\n      currency: 'PLN',\n    },\n  },\n  '6666-6666-6666-6666': {\n    id: '6666-6666-6666-6666',\n    icon: 'Fi',\n    name: 'Filip',\n    amount: {\n      value: 0,\n      currency: 'PLN',\n    },\n  },\n  '7777-7777-7777-7777': {\n    id: '7777-7777-7777-7777',\n    icon: 'A',\n    name: 'Aniela',\n    amount: {\n      value: 0,\n      currency: 'PLN',\n    },\n  },\n};\n\nexport interface BucketResponse {\n  id: string;\n  icon: string;\n  name: string;\n  amount: Money;\n}\n\nexport interface Money {\n  value: number;\n  currency: string;\n}\n\nclass BucketsRepository {\n  findAll(): BucketResponse[] {\n    return Object.values(db);\n  }\n}\n\nconst BucketsRepositoryInstance = new BucketsRepository();\n\nexport { BucketsRepositoryInstance as BucketsRepository };\n",
    "import React from 'react';\n\nconst Locale = 'pl-PL';\n\ninterface MoneyProps {\n  value: {\n    value: number;\n    currency: string;\n  };\n}\n\nexport const Money: React.FC<MoneyProps> = ({ value: { value, currency } }) => {\n  return (\n    <React.Fragment>\n      {value.toLocaleString(Locale, { style: 'currency', currency: currency, useGrouping: true })}\n    </React.Fragment>\n  );\n};\n",
    "import React, { FC, useState } from 'react';\nimport { BucketResponse } from './BucketsRepository';\nimport {\n  Accordion,\n  AccordionActions,\n  AccordionSummary,\n  Avatar,\n  Button,\n  Divider,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Money } from '../components/Money';\n\ninterface BucketsListProps {\n  buckets: BucketResponse[];\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '96%',\n    marginLeft: '2%',\n    marginTop: '2%',\n  },\n  card: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  icon: {\n    marginRight: '1em',\n  },\n  name: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexGrow: 1,\n    flexShrink: 0,\n  },\n  amount: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\ninterface BucketProps {\n  bucket: BucketResponse;\n  expanded: boolean;\n  onExpand: (id: string) => void;\n  onHideDetails: (id: string) => void;\n}\n\nconst Bucket: FC<BucketProps> = ({ bucket: { id, name, icon, amount }, expanded, onExpand, onHideDetails }) => {\n  const classes = useStyles();\n\n  const onChange = (expand: boolean) => {\n    if (expand) {\n      onExpand(id);\n    } else {\n      onHideDetails(id);\n    }\n  };\n\n  return (\n    <Accordion expanded={expanded} onChange={(_, expand) => onChange(expand)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} classes={{ content: classes.card }}>\n        <Avatar className={classes.icon} alt={name} title={name}>\n          {icon}\n        </Avatar>\n        <Typography className={classes.name}>{name}</Typography>\n        <Typography className={classes.amount}>\n          <Money value={amount} />\n        </Typography>\n      </AccordionSummary>\n      {/*<AccordionDetails>*/}\n      {/*  */}\n      {/*</AccordionDetails>*/}\n      <Divider />\n      <AccordionActions>\n        <Button size=\"small\" color=\"secondary\">\n          Wypłać\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Dodaj\n        </Button>\n      </AccordionActions>\n    </Accordion>\n  );\n};\n\nexport const BucketsList: React.FC<BucketsListProps> = ({ buckets }) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState('');\n\n  return (\n    <div className={classes.root}>\n      {buckets.map(bucket => (\n        <Bucket\n          key={bucket.id}\n          bucket={bucket}\n          expanded={expanded === bucket.id}\n          onExpand={id => setExpanded(id)}\n          onHideDetails={() => setExpanded('')}\n        />\n      ))}\n    </div>\n  );\n};\n",
    "import React, { FC, useEffect, useState } from 'react';\nimport { BucketResponse, BucketsRepository } from './BucketsRepository';\nimport { BucketsList } from './BucketsList';\n\nexport const Buckets: FC = () => {\n  const [buckets, setBuckets] = useState([] as BucketResponse[]);\n\n  useEffect(() => {\n    const result = BucketsRepository.findAll();\n    setBuckets(result);\n  }, []);\n\n  return <BucketsList buckets={buckets} />;\n};\n",
    "import React from 'react';\nimport { AppBar, Badge, fade, IconButton, InputBase, makeStyles, Toolbar } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport const TopBar: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n          />\n          <div className={classes.grow} />\n          <div\n          // className={classes.sectionDesktop}\n          >\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton edge=\"end\" aria-label=\"account of current user\" aria-haspopup=\"true\" color=\"inherit\">\n              <AccountCircle />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n",
    "import React from 'react';\nimport './App.css';\nimport { NavBar, NavItems } from './NavBar';\nimport { Buckets } from './buckets/Buckets';\nimport { Box } from '@material-ui/core';\nimport { TopBar } from './TopBar';\n\nconst App: React.FC = () => {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"flex-start\">\n      <TopBar />\n      <Buckets />\n      <NavBar defaultTab={NavItems.buckets} />\n    </Box>\n  );\n};\n\nexport default App;\n",
    "import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "// import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    // primary: {\n    //   main: '#556cd6',\n    // },\n    // secondary: {\n    //   main: '#19857b',\n    // },\n    // error: {\n    //   main: red.A400,\n    // },\n    // background: {\n    //   default: '#fff',\n    // },\n  },\n});\n\nexport default theme;\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
  ],
  "sourceRoot": ""
}